{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akash Jain\\\\Desktop\\\\MERN\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport DashboardAction from './DashboardAction';\nimport Experience from './Experience';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 44\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), \"Welcome \", user && user.name), profile !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(DashboardAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Experience, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"You have not yet set up a profile, please add some info \"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Create Profile\")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapstateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapstateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/Akash Jain/Desktop/MERN/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getCurrentProfile","Spinner","Link","DashboardAction","Experience","Dashboard","auth","user","profile","loading","name","propTypes","func","isRequired","object","mapstateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAQC,OAAR,MAAqB,mBAArB;AACA,SAAUC,IAAV,QAAsB,kBAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AACA,MAAMC,SAAS,GAAG,CAAC;AAACL,EAAAA,iBAAD;AAAoBM,EAAAA,IAAI,EAAC;AAACC,IAAAA;AAAD,GAAzB;AAAiCC,EAAAA,OAAO,EAAG;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV;AAA3C,CAAD,KAAqE;AAEnFb,EAAAA,SAAS,CAAC,MAAM;AACRI,IAAAA,iBAAiB;AACpB,GAFI,EAEH,EAFG,CAAT;AAKA,SAAOS,OAAO,IAAID,OAAO,KAAK,IAAvB,gBAAgC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,gBACH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,eAEA;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,cAC4CD,IAAI,IAAIA,IAAI,CAACG,IADzD,CAFA,EAKCF,OAAO,KAAK,IAAZ,gBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADA,gBAMD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,iBAAT;AAA2B,IAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CAXA,CADJ;AAqBH,CA5BD;;AA8BAH,SAAS,CAACM,SAAV,GAAsB;AAClBX,EAAAA,iBAAiB,EAAEF,SAAS,CAACc,IAAV,CAAeC,UADhB;AAElBP,EAAAA,IAAI,EAACR,SAAS,CAACgB,MAAV,CAAiBD,UAFJ;AAGlBL,EAAAA,OAAO,EAACV,SAAS,CAACgB,MAAV,CAAiBD;AAHP,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAI;AAC5BV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADgB;AAE5BE,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFa,CAAJ,CAA7B;;AAKA,eAAeT,OAAO,CAACgB,eAAD,EAAmB;AAAEf,EAAAA;AAAF,CAAnB,CAAP,CAAiDK,SAAjD,CAAf","sourcesContent":["import React , {useEffect, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport  Spinner from '../layout/Spinner';\r\nimport  { Link } from 'react-router-dom';\r\nimport DashboardAction from './DashboardAction';\r\nimport Experience from './Experience';\r\nconst Dashboard = ({getCurrentProfile, auth:{user}, profile : {profile, loading} }) => {\r\n\r\n    useEffect(() => {\r\n            getCurrentProfile();\r\n        },[]\r\n    );\r\n\r\n    return loading && profile === null ?  (<Spinner/>) :(\r\n        <Fragment>\r\n        <h1 className=\"large text-primary\">Dashboard</h1>\r\n        <p className=\"lead\">\r\n            <i className=\"fas fa-user\"></i>Welcome {user && user.name}\r\n        </p>\r\n        {profile !== null ?(\r\n         <Fragment>\r\n         <DashboardAction/>\r\n         <Experience  /> \r\n         </Fragment>\r\n        ):( \r\n        <Fragment>\r\n            <p>You have not yet set up a profile, please add some info </p>\r\n            <Link to='/create-profile' className='btn btn-primary my-1'>\r\n                Create Profile\r\n            </Link>\r\n        </Fragment>\r\n        )}\r\n    </Fragment>\r\n    );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    profile:PropTypes.object.isRequired\r\n};\r\n\r\nconst mapstateToProps = state =>({\r\n     auth: state.auth,\r\n     profile: state.profile\r\n})\r\n\r\nexport default connect(mapstateToProps,  { getCurrentProfile })(Dashboard);"]},"metadata":{},"sourceType":"module"}