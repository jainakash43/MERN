{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akash Jain\\\\Desktop\\\\MERN\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  ...rest\n}) => {\n  console.log(loading);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 8\n    }\n  }));\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:/Users/Akash Jain/Desktop/MERN/client/src/components/routing/PrivateRoute.js"],"names":["React","PropTypes","connect","Route","Redirect","PrivateRoute","component","Component","auth","isAuthenticated","loading","rest","console","log","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAKA,MAAMC,YAAY,GAAG,CAAC;AAClBC,EAAAA,SAAS,EAACC,SADQ;AAElBC,EAAAA,IAAI,EAAC;AAACC,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,GAFa;AAGjB,KAAGC;AAHc,CAAD,KAGH;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,sBAEG,oBAAC,KAAD,oBACOC,IADP;AAEG,IAAA,MAAM,EAAIG,KAAK,IACb,CAACL,eAAD,IAAoB,CAACC,OAArB,gBACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,gBAGI,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFH;AAaH,CAlBD;;AAoBAT,YAAY,CAACU,SAAb,GAAyB;AACrBP,EAAAA,IAAI,EAACP,SAAS,CAACe,MAAV,CAAiBC;AADD,CAAzB;;AAGA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADoB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACgB,eAAD,CAAP,CAAyBb,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst PrivateRoute = ({ \r\n    component:Component,\r\n    auth:{isAuthenticated, loading},\r\n     ...rest}) => {\r\n    console.log(loading);\r\n    return (\r\n      \r\n       <Route \r\n          {...rest}\r\n          render = {props => \r\n            !isAuthenticated && !loading ? (\r\n                <Redirect to='/login' />\r\n            ): (\r\n                <Component {...props} />\r\n            )\r\n        }  \r\n       />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    auth:PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}