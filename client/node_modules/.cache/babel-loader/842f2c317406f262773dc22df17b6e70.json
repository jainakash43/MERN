{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akash Jain\\\\Desktop\\\\MERN\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, deletePost, removeLike } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  to: `/profile/${user}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 15\n  }\n}), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 15\n  }\n}, name))), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }\n}, text), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"post-date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 14\n  }\n}, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 27\n  }\n}, date)), showActions && /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 31\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => addLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 15\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 15\n  }\n}, likes.length)), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => removeLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 15\n  }\n})), /*#__PURE__*/React.createElement(Link, {\n  to: `/posts/${_id}`,\n  className: \"btn btn-primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }\n}, \"Discussion \", comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  className: \"comment-count\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 19\n  }\n}, comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => deletePost(_id),\n  type: \"button\",\n  className: \"btn btn-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }\n})))));\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["C:/Users/Akash Jain/Desktop/MERN/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","deletePost","removeLike","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","e","length","loading","mapStateToProps","state","defaultProps","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport {connect} from 'react-redux';\r\nimport { addLike , deletePost, removeLike } from '../../actions/post';\r\n\r\nconst PostItem = ({addLike, \r\n                 removeLike, \r\n                 deletePost, \r\n                 auth,\r\n                 post:{ _id,text,name,avatar,user,likes,comments,date},\r\n                 showActions\r\n                  }) =>  (\r\n  \r\n    <div className=\"post bg-white p-1 my-1\">\r\n          <div>\r\n            <Link to={`/profile/${user}`}>\r\n              <img\r\n                className=\"round-img\"\r\n                src={avatar}\r\n                alt=\"\"\r\n              />\r\n              <h4>{name}</h4>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <p className=\"my-1\">\r\n             {text}\r\n            </p>\r\n             <p className=\"post-date\">\r\n                Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n            </p>\r\n            {\r\n              showActions && (<Fragment>\r\n\r\n            <button onClick={e => addLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"fas fa-thumbs-up\"></i>\r\n              <span>{likes.length}</span>\r\n            </button> \r\n            <button onClick={e => removeLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n              Discussion {comments.length > 0  && ( \r\n                  <span className='comment-count'>{comments.length}</span>)\r\n              } \r\n             \r\n            </Link>\r\n            {!auth.loading && user=== auth.user._id && (\r\n                <button\r\n            onClick={ e=> deletePost(_id)}      \r\n            type=\"button\"\r\n            className=\"btn btn-danger\">\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n            )}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              </Fragment>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n    \r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nPostItem.defaultProps={\r\n  showActions: true\r\n}\r\nPostItem.propTypes = {\r\n   post:PropTypes.object.isRequired,\r\n   auth:PropTypes.object.isRequired, \r\n   addLike: PropTypes.func.isRequired,\r\n   removeLike: PropTypes.func.isRequired,\r\n   deletePost: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default connect(mapStateToProps, {addLike, removeLike, deletePost})( PostItem );"]},"metadata":{},"sourceType":"module"}