{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { DELETE_POST, GET_POSTS, GET_POST, POST_ERROR, UPDATE_LIKES, ADD_POST } from './types'; // get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // add likes\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // remove likes\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //ADD POST\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/posts/', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Akash Jain/Desktop/MERN/client/src/actions/post.js"],"names":["axios","setAlert","DELETE_POST","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","ADD_POST","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getPost","id","addLike","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from './alert';\r\nimport { DELETE_POST, GET_POSTS, GET_POST, POST_ERROR, UPDATE_LIKES, ADD_POST} from './types';\r\n \r\n\r\n// get posts\r\nexport const getPosts = () => async dispatch => {\r\n\r\n    try\r\n    {\r\n         const res = await axios.get('/api/posts');\r\n\r\n         dispatch ({\r\n             type: GET_POSTS,\r\n             payload: res.data\r\n         })\r\n    }\r\n    catch(err)\r\n    {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status:err.response.status}\r\n        });\r\n\r\n    }\r\n}\r\n\r\n//get post\r\nexport const getPost = (id) => async dispatch => {\r\n\r\n    try\r\n    {\r\n         const res = await axios.get(`/api/posts/${id}`);\r\n\r\n         dispatch ({\r\n             type: GET_POST,\r\n             payload: res.data\r\n         })\r\n    }\r\n    catch(err)\r\n    {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status:err.response.status}\r\n        });\r\n\r\n    }\r\n}\r\n\r\n// add likes\r\nexport const addLike = id => async dispatch => {\r\n\r\n    try\r\n    {\r\n         const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n         dispatch ({\r\n             type: UPDATE_LIKES,\r\n             payload: { id, likes: res.data}\r\n         })\r\n    }\r\n    catch(err)\r\n    {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status:err.response.status}\r\n        });\r\n\r\n    }\r\n}\r\n\r\n// remove likes\r\nexport const removeLike = id => async dispatch => {\r\n\r\n    try\r\n    {\r\n         const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n         dispatch ({\r\n             type: UPDATE_LIKES,\r\n             payload: { id, likes: res.data}\r\n         })\r\n    }\r\n    catch(err)\r\n    {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status:err.response.status}\r\n        });\r\n\r\n    }\r\n}\r\n\r\n// Delete Post\r\nexport const deletePost = id => async dispatch => {\r\n\r\n    try\r\n    {\r\n         const res = await axios.delete(`/api/posts/${id}`);\r\n\r\n         dispatch ({\r\n             type: DELETE_POST,\r\n             payload: id\r\n         })\r\n\r\n         dispatch(setAlert('Post Removed','success'))\r\n    }\r\n    catch(err)\r\n    {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status:err.response.status}\r\n        });\r\n\r\n    }\r\n}\r\n\r\n//ADD POST\r\nexport const addPost = formData => async dispatch => {\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type':'application/json',\r\n\r\n        }\r\n    }\r\n    try\r\n    {\r\n         const res = await axios.post('/api/posts/', formData, config);\r\n\r\n         dispatch ({\r\n             type: ADD_POST,\r\n             payload: res.data\r\n         })\r\n\r\n         dispatch(setAlert('Post Created','success'))\r\n    }\r\n    catch(err)\r\n    {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status:err.response.status}\r\n        });\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}