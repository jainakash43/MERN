{"ast":null,"code":"import { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES, ADD_POST, GET_POST, ADD_COMMENT, DELETE_COMMENT, REMOVE_COMMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.filter(comment => comment._id === payload)\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Akash Jain/Desktop/MERN/client/src/reducers/post.js"],"names":["DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","ADD_POST","GET_POST","ADD_COMMENT","DELETE_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"mappings":"AAAA,SACIA,WADJ,EAEIC,SAFJ,EAGIC,UAHJ,EAIIC,YAJJ,EAKIC,QALJ,EAMIC,QANJ,EAOIC,WAPJ,EAQIC,cARJ,EASIC,cATJ,QAUO,kBAVP;AAeA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,eAAe,UAASC,KAAK,GAAEL,YAAhB,EAA8BM,MAA9B,EAAsC;AACjD,QAAM;AAAEC,IAAAA,IAAF;AAASC,IAAAA;AAAT,MAAqBF,MAA3B;;AAEA,UAAOC,IAAP;AACI,SAAKf,SAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHJ,QAAAA,KAAK,EAACO,OAFH;AAGHL,QAAAA,OAAO,EAAC;AAHL,OAAP;;AAKJ,SAAKP,QAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,IAAI,EAACM,OAFF;AAGHL,QAAAA,OAAO,EAAC;AAHL,OAAP;;AAMJ,SAAKR,QAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,KAAK,EAAC,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFH;AAGHE,QAAAA,OAAO,EAAC;AAHL,OAAP;;AAKJ,SAAKZ,WAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CAFJ;AAGHL,QAAAA,OAAO,EAAC;AAHL,OAAP;;AAMJ,SAAKV,UAAL;AACI,aAAO,EACC,GAAGY,KADJ;AAECD,QAAAA,KAAK,EAACI,OAFP;AAGCL,QAAAA,OAAO,EAAC;AAHT,OAAP;;AAKJ,SAAKT,YAAL;AACI,aAAO,EACC,GAAGW,KADJ;AAECJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAgBT,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,EAArB,GAA0B,EAAC,GAAGV,IAAJ;AAAWW,UAAAA,KAAK,EACzEL,OAAO,CAACK;AADiD,SAA1B,GACdX,IADV,CAFR;AAICC,QAAAA,OAAO,EAAE;AAJV,OAAP;;AAMJ,SAAKN,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,IAAI,EAAE,EAAC,GAAGG,KAAK,CAACH,IAAV;AAAgBY,UAAAA,QAAQ,EAAEN;AAA1B,SAFH;AAGHL,QAAAA,OAAO,EAAC;AAHL,OAAP;;AAKJ,SAAKJ,cAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,IAAI,EAAE,EACF,GAAGG,KAAK,CAACH,IADP;AAEFY,UAAAA,QAAQ,EAAET,KAAK,CAACH,IAAN,CAAWY,QAAX,CAAoBL,MAApB,CAA2BM,OAAO,IAAIA,OAAO,CAACL,GAAR,KAAgBF,OAAtD;AAFR,SAFH;AAMHL,QAAAA,OAAO,EAAE;AANN,OAAP;;AAQA;AACI,aAAOE,KAAP;AAxDZ;AA0DH","sourcesContent":["import {\r\n    DELETE_POST,\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    ADD_POST,\r\n    GET_POST, \r\n    ADD_COMMENT,\r\n    DELETE_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state= initialState, action) {\r\n    const { type , payload } = action;\r\n\r\n    switch(type){\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts:payload,\r\n                loading:false\r\n            };\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post:payload,\r\n                loading:false\r\n\r\n            };\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts:[payload, ...state.posts],\r\n                loading:false\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading:false\r\n            };\r\n        \r\n        case POST_ERROR:\r\n            return {\r\n                    ...state,\r\n                    error:payload,\r\n                    loading:false\r\n                };\r\n        case UPDATE_LIKES:\r\n            return {\r\n                    ...state,\r\n                    posts: state.posts.map(post => post._id === payload.id ? {...post,  likes:\r\n                    payload.likes} : post),\r\n                    loading: false \r\n                }\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {...state.post, comments: payload },\r\n                loading:false\r\n            }\r\n        case REMOVE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    comments: state.post.comments.filter(comment => comment._id === payload )\r\n                },\r\n                loading: false\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}